// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebEngineering.Data;

#nullable disable

namespace WebEngineering.Migrations
{
    [DbContext(typeof(IdentityContext))]
    partial class IdentityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "e43c773d-caef-40da-953f-237a39ab0347",
                            ConcurrencyStamp = "0e9b5eab-40f1-45c2-a24d-63fd37af6fa5",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "83a569cd-8e2b-4e3e-95bb-a24a1a7fd532",
                            RoleId = "e43c773d-caef-40da-953f-237a39ab0347"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebEngineering.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "16b1ded0-d96f-4766-b1ab-9f0e95756c1e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e93827c7-5b27-45ec-8cdf-7f2ccecca76a",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO01@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ4Uuoi1Ppm1VP+aSsrLL4m9pQ7GajRhFrvlzCLueRLvk43kpRTK7rIGpP1O2Hv9zQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e59aafa4-ef7b-4237-93dd-537ae2e98c18",
                            TwoFactorEnabled = false,
                            UserName = "demo01@gmail.com"
                        },
                        new
                        {
                            Id = "817d72c8-a46f-48a2-b5fa-2ff5f7302ea2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "50ab9473-26c0-4853-8862-65f1e553dc6d",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO02@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELSMYgX4wkUbUnj22+2C6A1NsRJUOwu0Wfib8VHipsD38R7D2qJEHhDj0FvkKGmzhA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3cc39e3-a319-4f53-bf93-deb80d38ced5",
                            TwoFactorEnabled = false,
                            UserName = "demo02@gmail.com"
                        },
                        new
                        {
                            Id = "2e5a8c01-cd13-4c38-8efe-27adb9d37d41",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a58ce7aa-bb35-4308-a131-571481064bb2",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO03@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOjHYoU7pXsV0AkpYQ0GqetSm16m3t/69s6ejKljhHSL78ItAq22p3lBmPRsRV7Qvw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fd182861-5ae8-4b55-87f9-a85f0071fbc5",
                            TwoFactorEnabled = false,
                            UserName = "demo03@gmail.com"
                        },
                        new
                        {
                            Id = "e63c7ee9-d210-454d-be09-b6dddb0f83f6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f49a9648-3e31-4ba3-8902-159b7d782be6",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO04@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFNpC042qEl8YFgL17nsg8js1Ee/jOifhb91FTSkvqyARGGYSkEesnFBY5aDQdVjZQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ee740da1-8159-4376-96be-0a8966bacdd5",
                            TwoFactorEnabled = false,
                            UserName = "demo04@gmail.com"
                        },
                        new
                        {
                            Id = "83a569cd-8e2b-4e3e-95bb-a24a1a7fd532",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "647537b6-77d3-4ad4-b0a0-b4b16d321daf",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFys1q9tH8dyAnt/N5hRHqX31ikSZYJK3AaEeahFbargQmocqYPWxNySeS5FuK1fQg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9abbae67-87d8-46ee-870f-e66ae47081b5",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bestellungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2022, 7, 8, 0, 32, 0, 0, DateTimeKind.Unspecified),
                            Menge = 71,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 4, 22, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 227,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2022, 3, 21, 18, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 260,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2023, 5, 4, 5, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 61,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2022, 3, 22, 4, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 88,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2022, 10, 22, 20, 28, 0, 0, DateTimeKind.Unspecified),
                            Menge = 142,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2023, 9, 6, 23, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 249,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 9, 10, 12, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 232,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2022, 3, 29, 1, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 169,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2023, 3, 7, 1, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 61,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2022, 3, 31, 5, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 247,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2023, 8, 20, 14, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 298,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2023, 1, 23, 17, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 261,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 8, 6, 22, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 167,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 4, 2, 4, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 261,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2023, 7, 16, 23, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 24,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2023, 9, 1, 14, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 288,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 8, 29, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 288,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2022, 10, 5, 0, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 187,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 5, 27, 3, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 106,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -21,
                            Date = new DateTime(2023, 4, 19, 17, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 206,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -22,
                            Date = new DateTime(2022, 11, 22, 2, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 48,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -23,
                            Date = new DateTime(2022, 10, 7, 3, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 30,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -24,
                            Date = new DateTime(2022, 7, 23, 5, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 142,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -25,
                            Date = new DateTime(2022, 5, 2, 0, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 227,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -26,
                            Date = new DateTime(2023, 7, 13, 5, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 271,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -27,
                            Date = new DateTime(2023, 3, 29, 2, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 44,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -28,
                            Date = new DateTime(2023, 6, 28, 20, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 285,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -29,
                            Date = new DateTime(2022, 3, 1, 22, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 25,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -30,
                            Date = new DateTime(2022, 10, 2, 20, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 201,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -31,
                            Date = new DateTime(2023, 6, 20, 10, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 42,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -32,
                            Date = new DateTime(2023, 10, 5, 4, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 167,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -33,
                            Date = new DateTime(2022, 9, 23, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 62,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -34,
                            Date = new DateTime(2023, 9, 17, 0, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 230,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -35,
                            Date = new DateTime(2023, 3, 17, 1, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 236,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -36,
                            Date = new DateTime(2022, 11, 11, 5, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 211,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -37,
                            Date = new DateTime(2023, 6, 26, 7, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 45,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -38,
                            Date = new DateTime(2023, 3, 24, 18, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 211,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -39,
                            Date = new DateTime(2022, 11, 11, 17, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 148,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -40,
                            Date = new DateTime(2022, 1, 28, 17, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 182,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -41,
                            Date = new DateTime(2022, 6, 26, 1, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 9,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -42,
                            Date = new DateTime(2022, 8, 11, 23, 16, 0, 0, DateTimeKind.Unspecified),
                            Menge = 234,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -43,
                            Date = new DateTime(2022, 6, 19, 10, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 161,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -44,
                            Date = new DateTime(2023, 4, 26, 9, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 215,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -45,
                            Date = new DateTime(2022, 9, 6, 10, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 89,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -46,
                            Date = new DateTime(2022, 8, 3, 16, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 138,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -47,
                            Date = new DateTime(2022, 8, 16, 6, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 287,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -48,
                            Date = new DateTime(2022, 1, 15, 22, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 154,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -49,
                            Date = new DateTime(2022, 10, 3, 7, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 86,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -50,
                            Date = new DateTime(2022, 9, 28, 4, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 21,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -51,
                            Date = new DateTime(2023, 7, 18, 2, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 214,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -52,
                            Date = new DateTime(2023, 3, 4, 9, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 161,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -53,
                            Date = new DateTime(2023, 5, 27, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 190,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -54,
                            Date = new DateTime(2022, 5, 17, 11, 16, 0, 0, DateTimeKind.Unspecified),
                            Menge = 105,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -55,
                            Date = new DateTime(2022, 5, 14, 15, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 39,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -56,
                            Date = new DateTime(2022, 9, 24, 3, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 35,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -57,
                            Date = new DateTime(2022, 12, 4, 6, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 133,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -58,
                            Date = new DateTime(2022, 9, 11, 6, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 10,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -59,
                            Date = new DateTime(2022, 10, 15, 14, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 263,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -60,
                            Date = new DateTime(2022, 1, 20, 3, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 158,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -61,
                            Date = new DateTime(2023, 3, 27, 19, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 80,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -62,
                            Date = new DateTime(2022, 4, 15, 6, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 288,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -63,
                            Date = new DateTime(2023, 3, 3, 10, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 130,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -64,
                            Date = new DateTime(2023, 5, 3, 11, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 123,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -65,
                            Date = new DateTime(2022, 10, 12, 5, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 291,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -66,
                            Date = new DateTime(2023, 3, 5, 12, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 10,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -67,
                            Date = new DateTime(2023, 10, 9, 15, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 223,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -68,
                            Date = new DateTime(2022, 5, 3, 2, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 168,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -69,
                            Date = new DateTime(2022, 4, 7, 15, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 149,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -70,
                            Date = new DateTime(2023, 1, 23, 3, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 129,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -71,
                            Date = new DateTime(2022, 2, 15, 12, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 104,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -72,
                            Date = new DateTime(2023, 10, 19, 0, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 247,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -73,
                            Date = new DateTime(2023, 2, 21, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 205,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -74,
                            Date = new DateTime(2022, 2, 16, 14, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 159,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -75,
                            Date = new DateTime(2023, 7, 17, 8, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 43,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -76,
                            Date = new DateTime(2023, 3, 29, 9, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 116,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -77,
                            Date = new DateTime(2023, 3, 27, 20, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 105,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -78,
                            Date = new DateTime(2023, 9, 10, 3, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 297,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -79,
                            Date = new DateTime(2022, 1, 26, 15, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 105,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -80,
                            Date = new DateTime(2023, 11, 8, 9, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 215,
                            ProduktId = -19
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Lieferungen");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 12, 22, 10, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1936,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 9, 13, 14, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1137,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 1, 10, 16, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4130,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 10, 1, 6, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4531,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 4, 4, 14, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3461,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 2, 13, 15, 27, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2217,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2023, 6, 14, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1780,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2022, 10, 24, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 661,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2023, 3, 24, 6, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3800,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2023, 3, 21, 11, 27, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1776,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2023, 6, 7, 2, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1262,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2022, 2, 11, 7, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1907,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2022, 9, 12, 12, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4271,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2022, 5, 26, 9, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2502,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2022, 4, 21, 2, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2666,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateTime(2022, 4, 6, 22, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3179,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = 17,
                            Date = new DateTime(2022, 1, 12, 20, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4018,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = 18,
                            Date = new DateTime(2022, 6, 18, 2, 27, 0, 0, DateTimeKind.Unspecified),
                            Menge = 850,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = 19,
                            Date = new DateTime(2023, 4, 4, 14, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2529,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = 20,
                            Date = new DateTime(2022, 8, 6, 4, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3290,
                            ProduktId = -1
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkte");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Kunststoffgehäuse"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Titanschalter"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Titansensoren"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Keramikunterlegscheiben"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Titangehäuse"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Silberzahnräder"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Plexiglassensoren"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Acrylventile"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Glasbolzen"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Acrylsensoren"
                        },
                        new
                        {
                            Id = -11,
                            Name = "Stahlgehäuse"
                        },
                        new
                        {
                            Id = -12,
                            Name = "Keramikdichtungen"
                        },
                        new
                        {
                            Id = -13,
                            Name = "Metallschalter"
                        },
                        new
                        {
                            Id = -14,
                            Name = "Betonkabel"
                        },
                        new
                        {
                            Id = -15,
                            Name = "Betonzahnräder"
                        },
                        new
                        {
                            Id = -16,
                            Name = "Steinzahnräder"
                        },
                        new
                        {
                            Id = -17,
                            Name = "Papierschalter"
                        },
                        new
                        {
                            Id = -18,
                            Name = "Keramikfilter"
                        },
                        new
                        {
                            Id = -19,
                            Name = "Kunststoffrohre"
                        },
                        new
                        {
                            Id = -20,
                            Name = "Steinbolzen"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("LieferungId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.HasIndex("LieferungId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ViewModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.HasOne("WebEngineering.Models.Bestellung", "Bestellung")
                        .WithMany()
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Lieferung", "Lieferung")
                        .WithMany()
                        .HasForeignKey("LieferungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");

                    b.Navigation("Lieferung");

                    b.Navigation("Produkt");
                });
#pragma warning restore 612, 618
        }
    }
}
