// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebEngineering.Data;

#nullable disable

namespace WebEngineering.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20230716112327_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ed204f79-8e88-48d7-8789-47e8f341e647",
                            ConcurrencyStamp = "372f11ee-8146-49fb-935c-810e3e4a12e6",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "91de8b44-6ea8-4e18-9e53-7891725196f9",
                            RoleId = "ed204f79-8e88-48d7-8789-47e8f341e647"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebEngineering.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "112b2ab1-7a6e-495f-952e-5c25c697e1dc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e7223eca-ee21-48be-9642-55f7fe903f09",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO01@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELJ2iP+jIxt1PuCstO3fVkgoIaMQf+lrqNyMr3cIybm0I/FFwkIbu+0Mjpgb4tLwCQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e306149a-c620-4b2e-9c89-dcdde8af3592",
                            TwoFactorEnabled = false,
                            UserName = "demo01@gmail.com"
                        },
                        new
                        {
                            Id = "0da76ccb-6a24-4a42-bb74-7916f38f886b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6bb0dd4d-0bad-4a06-93bb-16e20fa03c12",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO02@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEPZRmbvzUmLdidtz/usiPZA46GbsSiH/K7NXU8F/tjn0ukUPM7ZHopQJgiA5gR8RVA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4db63005-4ac8-4263-9840-9ed66d3808fa",
                            TwoFactorEnabled = false,
                            UserName = "demo02@gmail.com"
                        },
                        new
                        {
                            Id = "77ebb93d-5c7a-4abb-9431-702f1437af51",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "60399f73-27e4-4491-bf58-c3a99fefe018",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO03@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJMDGY8iRPqfHDm+qnRuMG8BH9HAfB9AaAzBrx9C9w34OVykXRlqtKU8VmALndyGDA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "819eb97f-47c4-400c-ac55-c096a25b8f37",
                            TwoFactorEnabled = false,
                            UserName = "demo03@gmail.com"
                        },
                        new
                        {
                            Id = "887b8ef7-7744-48dd-b3a9-58997b447aa4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ef0e7c8-af36-4290-a269-0774fbd0eb34",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO04@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK9HUiM7IvQsuhMFa53AxxGtYIa/dJCD8o1h/6GIQZgqlu9UjLhbQd5myAa4CTx7zg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7d1faddf-62c5-4458-a275-dc6eaed0df19",
                            TwoFactorEnabled = false,
                            UserName = "demo04@gmail.com"
                        },
                        new
                        {
                            Id = "91de8b44-6ea8-4e18-9e53-7891725196f9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a19c4e3-5ebd-4113-b0f1-e277d95f782a",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK4yCtsLaH4X5yaKhfRXlTfYtv/U/+MIDfapilvQ0eQkjDmniaDzc3lkoGu1kBiCvw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5bac7536-21ee-4ba3-bed2-b5850fd240bd",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bestellungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2022, 12, 2, 13, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 291,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2022, 10, 22, 5, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 87,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 2, 1, 9, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 191,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 1, 5, 0, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 235,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2023, 8, 5, 0, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 243,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2022, 2, 10, 8, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 124,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2022, 5, 14, 11, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 130,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 8, 13, 3, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 61,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 6, 6, 14, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 81,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2022, 5, 31, 4, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 255,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2023, 11, 19, 5, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 51,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2023, 6, 17, 21, 10, 0, 0, DateTimeKind.Unspecified),
                            Menge = 265,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2022, 8, 21, 10, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 112,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 6, 17, 8, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 165,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 7, 24, 9, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 141,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 4, 25, 11, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 177,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2022, 7, 21, 17, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 218,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 3, 10, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 105,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2023, 11, 8, 2, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 154,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2022, 5, 22, 0, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 239,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -21,
                            Date = new DateTime(2023, 12, 21, 16, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -22,
                            Date = new DateTime(2023, 7, 22, 14, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 223,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -23,
                            Date = new DateTime(2022, 5, 19, 15, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 108,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -24,
                            Date = new DateTime(2023, 11, 19, 22, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 36,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -25,
                            Date = new DateTime(2023, 5, 31, 5, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -26,
                            Date = new DateTime(2023, 2, 20, 10, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 47,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -27,
                            Date = new DateTime(2023, 9, 9, 7, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 67,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -28,
                            Date = new DateTime(2023, 1, 21, 0, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 187,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -29,
                            Date = new DateTime(2023, 5, 27, 14, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 21,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -30,
                            Date = new DateTime(2023, 12, 9, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 57,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -31,
                            Date = new DateTime(2023, 11, 8, 13, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 95,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -32,
                            Date = new DateTime(2022, 1, 9, 19, 28, 0, 0, DateTimeKind.Unspecified),
                            Menge = 74,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -33,
                            Date = new DateTime(2023, 6, 4, 18, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 181,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -34,
                            Date = new DateTime(2023, 6, 15, 22, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 186,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -35,
                            Date = new DateTime(2023, 11, 18, 20, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 140,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -36,
                            Date = new DateTime(2023, 8, 11, 4, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 121,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -37,
                            Date = new DateTime(2022, 12, 23, 4, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 184,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -38,
                            Date = new DateTime(2022, 5, 24, 17, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 97,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -39,
                            Date = new DateTime(2023, 9, 5, 14, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 190,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -40,
                            Date = new DateTime(2023, 10, 11, 3, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 23,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -41,
                            Date = new DateTime(2022, 3, 16, 17, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 294,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -42,
                            Date = new DateTime(2023, 11, 27, 22, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 99,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -43,
                            Date = new DateTime(2023, 5, 3, 3, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 39,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -44,
                            Date = new DateTime(2023, 11, 3, 18, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 247,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -45,
                            Date = new DateTime(2022, 6, 24, 3, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 45,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -46,
                            Date = new DateTime(2023, 3, 29, 10, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 293,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -47,
                            Date = new DateTime(2022, 10, 8, 17, 5, 0, 0, DateTimeKind.Unspecified),
                            Menge = 113,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -48,
                            Date = new DateTime(2022, 8, 23, 5, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 41,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -49,
                            Date = new DateTime(2022, 1, 9, 0, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 205,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -50,
                            Date = new DateTime(2022, 6, 20, 20, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 59,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -51,
                            Date = new DateTime(2022, 5, 6, 8, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 255,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -52,
                            Date = new DateTime(2023, 4, 18, 4, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 263,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -53,
                            Date = new DateTime(2023, 10, 26, 1, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 193,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -54,
                            Date = new DateTime(2023, 11, 15, 14, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 46,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -55,
                            Date = new DateTime(2022, 2, 15, 0, 5, 0, 0, DateTimeKind.Unspecified),
                            Menge = 238,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -56,
                            Date = new DateTime(2022, 11, 29, 5, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 105,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -57,
                            Date = new DateTime(2022, 8, 27, 23, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 290,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -58,
                            Date = new DateTime(2022, 4, 18, 22, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 158,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -59,
                            Date = new DateTime(2023, 6, 4, 5, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 137,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -60,
                            Date = new DateTime(2022, 5, 3, 23, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 32,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -61,
                            Date = new DateTime(2023, 1, 14, 5, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 28,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -62,
                            Date = new DateTime(2023, 6, 26, 13, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 149,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -63,
                            Date = new DateTime(2023, 10, 30, 8, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 264,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -64,
                            Date = new DateTime(2023, 1, 28, 3, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 20,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -65,
                            Date = new DateTime(2023, 12, 25, 8, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 263,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -66,
                            Date = new DateTime(2022, 1, 10, 23, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 110,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -67,
                            Date = new DateTime(2023, 3, 9, 14, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 227,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -68,
                            Date = new DateTime(2023, 9, 16, 18, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 254,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -69,
                            Date = new DateTime(2022, 4, 19, 22, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 103,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -70,
                            Date = new DateTime(2022, 8, 1, 10, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 166,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -71,
                            Date = new DateTime(2023, 7, 20, 11, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 239,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -72,
                            Date = new DateTime(2023, 8, 16, 22, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 60,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -73,
                            Date = new DateTime(2023, 10, 1, 4, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 121,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -74,
                            Date = new DateTime(2022, 1, 16, 18, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 70,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -75,
                            Date = new DateTime(2022, 11, 25, 17, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 123,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -76,
                            Date = new DateTime(2023, 12, 17, 17, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 186,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -77,
                            Date = new DateTime(2022, 1, 26, 1, 16, 0, 0, DateTimeKind.Unspecified),
                            Menge = 93,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -78,
                            Date = new DateTime(2022, 11, 8, 1, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 67,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -79,
                            Date = new DateTime(2023, 5, 23, 13, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 164,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -80,
                            Date = new DateTime(2023, 11, 15, 0, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 288,
                            ProduktId = -16
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Lieferungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2022, 1, 8, 3, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 542,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2022, 8, 12, 9, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3490,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 6, 25, 18, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2834,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2023, 5, 10, 4, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3433,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2022, 3, 14, 9, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1724,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2022, 10, 26, 2, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3401,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2022, 3, 18, 19, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4115,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2023, 9, 20, 23, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3699,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 5, 15, 0, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4682,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2023, 12, 23, 17, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1853,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2023, 4, 13, 17, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3958,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2022, 1, 12, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 562,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2022, 1, 21, 22, 32, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4647,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 2, 14, 10, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4690,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 2, 23, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1296,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 6, 18, 18, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2831,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2022, 9, 28, 15, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1273,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 2, 19, 13, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 679,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2023, 11, 21, 4, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3054,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 1, 27, 18, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1638,
                            ProduktId = -12
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DurchschnittlicheBestellmenge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DurchschnittlicheLiefermenge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkte");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Titanschalter"
                        },
                        new
                        {
                            Id = -2,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Kupferfedern"
                        },
                        new
                        {
                            Id = -3,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Keramikkabel"
                        },
                        new
                        {
                            Id = -4,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Metallunterlegscheiben"
                        },
                        new
                        {
                            Id = -5,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Bronzekabel"
                        },
                        new
                        {
                            Id = -6,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Titanfedern"
                        },
                        new
                        {
                            Id = -7,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Metallfilter"
                        },
                        new
                        {
                            Id = -8,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Plexiglassensoren"
                        },
                        new
                        {
                            Id = -9,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Aluminiumrohre"
                        },
                        new
                        {
                            Id = -10,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Plexiglassensoren"
                        },
                        new
                        {
                            Id = -11,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Gummifilter"
                        },
                        new
                        {
                            Id = -12,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Kunststoffzahnräder"
                        },
                        new
                        {
                            Id = -13,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Keramikunterlegscheiben"
                        },
                        new
                        {
                            Id = -14,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Aluminiumpumpen"
                        },
                        new
                        {
                            Id = -15,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Papierbolzen"
                        },
                        new
                        {
                            Id = -16,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Keramikriemen"
                        },
                        new
                        {
                            Id = -17,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Glasschalter"
                        },
                        new
                        {
                            Id = -18,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Kupferzahnräder"
                        },
                        new
                        {
                            Id = -19,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Stahlfilter"
                        },
                        new
                        {
                            Id = -20,
                            DurchschnittlicheBestellmenge = 0m,
                            DurchschnittlicheLiefermenge = 0m,
                            Name = "Bronzemuttern"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("LieferungId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.HasIndex("LieferungId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ViewModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.HasOne("WebEngineering.Models.Bestellung", "Bestellung")
                        .WithMany()
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Lieferung", "Lieferung")
                        .WithMany()
                        .HasForeignKey("LieferungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");

                    b.Navigation("Lieferung");

                    b.Navigation("Produkt");
                });
#pragma warning restore 612, 618
        }
    }
}
